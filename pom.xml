<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.binfast.apijson</groupId>
    <artifactId>binfast-apijson</artifactId>
    <version>0.0.2-SNAPSHOT</version>
    <name>binfast-apijson</name>
    <description>binfast-apijson</description>

    <properties>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <spring-boot.version>3.3.3</spring-boot.version>
        <repackage.classifier/>
<!--        <spring-native.version>0.12.2</spring-native.version>-->
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!-- JDK 11+ 需要，否则启动报错 NoClassDefFoundError: javax/activation/UnsupportedDataTypeException -->
<!--        <dependency>-->
<!--            <groupId>javax.activation</groupId>-->
<!--            <artifactId>activation</artifactId>-->
<!--            <version>1.1.1</version>-->
<!--        </dependency>-->
<!--        &lt;!&ndash; JDK 17 低版本库 需要 &ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>com.sun.xml.bind</groupId>-->
<!--            <artifactId>jaxb-impl</artifactId>-->
<!--            <version>2.3.5</version>-->
<!--        </dependency>-->

        <!-- APIJSON 需要用的依赖库，1.2.0 以上 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.83</version>
        </dependency>
        <!-- apijson-framework 需要用的依赖库，4.0.0 以上 -->
<!--        <dependency>-->
<!--            <groupId>javax.servlet</groupId>-->
<!--            <artifactId>javax.servlet-api</artifactId>-->
<!--            <version>4.0.1</version>-->
<!--        </dependency>-->

        <!-- 单元测试：可使用 libs 目录的 unitauto-java.jar 和 unitauto-jar.jar 来替代，两种方式二选一 <<<<<<<<< -->
        <dependency>
            <groupId>com.github.TommyLemon</groupId>
            <artifactId>unitauto-java</artifactId>
            <version>3.0.5</version>
        </dependency>
        <dependency>
            <groupId>com.github.TommyLemon</groupId>
            <artifactId>unitauto-jar</artifactId>
            <version>3.0.5</version>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>io.github.classgraph</groupId>-->
<!--            <artifactId>classgraph</artifactId>-->
<!--            <version>4.8.175</version>-->
<!--        </dependency>-->
        <!-- 单元测试：可使用 libs 目录的 unitauto-java.jar 和 unitauto-jar.jar 来替代，两种方式二选一 >>>>>>>>> -->


        <!-- 可使用 libs 目录的 apijson-orm.jar, apijson-framework.jar, apijson-column.jar 来替代，两种方式二选一 <<<<<<<<<< -->
        <dependency>
            <groupId>com.github.Tencent</groupId>
            <artifactId>APIJSON</artifactId>
            <version>7.0.3</version>
        </dependency>
        <dependency>
            <groupId>com.github.APIJSON</groupId>
            <artifactId>apijson-framework</artifactId>
            <version>7.0.3</version>
        </dependency>
        <dependency>
            <groupId>com.github.APIJSON</groupId>
            <artifactId>apijson-column</artifactId>
            <version>2.0.3</version>
        </dependency>
        <dependency>
            <groupId>com.github.APIJSON</groupId>
            <artifactId>apijson-router</artifactId>
            <version>2.0.3</version>
        </dependency>
        <!-- 可使用 libs 目录的 apijson-orm.jar, apijson-framework.jar, apijson-column.jar 来替代，两种方式二选一 >>>>>>>>>> -->

        <!-- 需要用的数据库 JDBC 驱动 -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.nebula-contrib</groupId>
            <artifactId>nebula-jdbc</artifactId>
            <version>3.3.0</version>
        </dependency>

        <!-- 需要用的 HikariCP 数据库连接池库，3.1.0 以上 -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
<!--            <version>5.1.0</version>-->
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat.embed</groupId>
                    <artifactId>tomcat-embed-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.tomcat.embed</groupId>
                    <artifactId>tomcat-embed-websocket</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.experimental</groupId>
            <artifactId>tomcat-embed-programmatic</artifactId>
            <version>${tomcat.version}</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.springframework.experimental</groupId>-->
<!--            <artifactId>spring-native</artifactId>-->
<!--            <version>${spring-native.version}</version>-->
<!--        </dependency>-->
<!--        &lt;!&ndash;打包的时候排除，当在代码中定义Hints信息时，需要引用此包&ndash;&gt;-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.experimental</groupId>-->
<!--            <artifactId>spring-aot</artifactId>-->
<!--            <scope>provided</scope>-->
<!--            <version>${spring-native.version}</version>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

<!--    <dependencyManagement>-->
<!--        <dependencies>-->
<!--            <dependency>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-dependencies</artifactId>-->
<!--                <version>${spring-boot.version}</version>-->
<!--                <type>pom</type>-->
<!--                <scope>import</scope>-->
<!--            </dependency>-->
<!--        </dependencies>-->
<!--    </dependencyManagement>-->

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>
        <plugins>
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-jar-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <archive>-->
<!--                        <manifestEntries>-->
<!--                            <Spring-Boot-Native-Processed>true</Spring-Boot-Native-Processed>-->
<!--                        </manifestEntries>-->
<!--                    </archive>-->
<!--                </configuration>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.12.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-install-plugin</artifactId>-->
<!--                <version>3.1.1</version>-->
<!--            </plugin>-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
<!--                <version>2.4.1</version>-->
                <configuration>
                    <mainClass>com.binfast.apijson.BinfastApijsonApplication</mainClass>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
<!--                    <classifier>${repackage.classifier}</classifier>-->
                    <image>
                        <builder>paketobuildpacks/builder:tiny</builder>
                        <env>
                            <BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
                        </env>
                    </image>
                </configuration>
                <executions>
                    <execution>
                        <id>process-aot</id>
                        <goals>
                            <goal>process-aot</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <configuration>
                    <jvmArgs>
                        <arg>-Xmx6g</arg>
                        <arg>-Xms6g</arg>
                    </jvmArgs>
                    <agent>
                        <enabled>true</enabled>
<!--                        <modes>-->
<!--                            <conditional>-->
<!--                                <userCodeFilterPath>${user.dir}/src/main/resources/META-INF/native-image/user-code-filter.json-->
<!--                                </userCodeFilterPath>-->
<!--                                <extraFilterPath>${user.dir}/src/main/resources/META-INF/native-image/extra-filter.json-->
<!--                                </extraFilterPath>-->
<!--                                <parallel>true</parallel>-->
<!--                            </conditional>-->
<!--                        </modes>-->
                    </agent>
<!--                    <arguments>-->
<!--                        <argument>&#45;&#45;enable-preview</argument>-->
<!--                        <argument>&#45;&#45;reflective-config-file=reflect-config.json</argument>-->
<!--                    </arguments>-->
                    <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                    <metadataRepository>
                        <enabled>true</enabled>
                    </metadataRepository>
                    <requiredVersion>22.3</requiredVersion>
                    <!--移除对yaml的支持-->
<!--                    <removeYamlSupport>true</removeYamlSupport>-->
<!--                    &lt;!&ndash;移除对jmx的支持&ndash;&gt;-->
<!--                    <removeJmxSupport>true</removeJmxSupport>-->
                    <buildArgs>
                        --enable-monitoring
                        --initialize-at-build-time=java.beans.Introspector
<!--                        &#45;&#45;verbose-->
                        --no-fallback
<!--                        &#45;&#45;enable-url-protocols=http,https-->
                    </buildArgs>
                    <verbose>true</verbose>
                </configuration>
                <executions>
                    <execution>
                        <id>build-native</id>
                        <goals>
                            <goal>compile-no-fork</goal>
                            <goal>add-reachability-metadata</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                    <execution>
                        <id>test-native</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>test</phase>
                    </execution>
<!--                    <execution>-->
<!--&lt;!&ndash;                        <id>add-reachability-metadata</id>&ndash;&gt;-->
<!--                        <goals>-->
<!--                            <goal>add-reachability-metadata</goal>-->
<!--                            <goal>compile</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
                </executions>
            </plugin>
            <!-- Spring AOT 插件 -->
<!--            <plugin>-->
<!--                <groupId>org.graalvm.buildtools</groupId>-->
<!--                <artifactId>native-maven-plugin</artifactId>-->
<!--                <configuration>-->
<!--                    <classesDirectory>${project.build.outputDirectory}</classesDirectory>-->
<!--                    <metadataRepository>-->
<!--                        <enabled>true</enabled>-->
<!--                    </metadataRepository>-->
<!--                    <requiredVersion>22.3</requiredVersion>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>add-reachability-metadata</id>-->
<!--                        <goals>-->
<!--                            <goal>add-reachability-metadata</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
<!--            <plugin>-->
<!--                <groupId>org.hibernate.orm.tooling</groupId>-->
<!--                <artifactId>hibernate-enhance-maven-plugin</artifactId>-->
<!--                <version>${hibernate.version}</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>enhance</id>-->
<!--                        <goals>-->
<!--                            <goal>enhance</goal>-->
<!--                        </goals>-->
<!--                        <configuration>-->
<!--                            <failOnError>true</failOnError>-->
<!--                            <enableLazyInitialization>true</enableLazyInitialization>-->
<!--                            <enableDirtyTracking>true</enableDirtyTracking>-->
<!--                            <enableAssociationManagement>true</enableAssociationManagement>-->
<!--                            <enableExtendedEnhancement>false</enableExtendedEnhancement>-->
<!--                        </configuration>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>
    </build>

    <repositories>
<!--        <repository>-->
<!--            <id>spring-releases</id>-->
<!--            <name>Spring Releases</name>-->
<!--            <url>https://repo.spring.io/release</url>-->
<!--            <snapshots>-->
<!--                <enabled>false</enabled>-->
<!--            </snapshots>-->
<!--        </repository>-->
<!--        <repository>-->
<!--            <id>snapshots</id>-->
<!--            <name>Local Nexus</name>-->
<!--            <url>https://repo.spring.io/release</url>-->
<!--        </repository>-->
        <!-- APIJSON 必须用到的托管平台 -->
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-releases</id>
            <name>Spring Releases</name>
            <url>https://repo.spring.io/release</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
<!--        <pluginRepository>-->
<!--            <id>snapshots</id>-->
<!--            <name>Nexus Local</name>-->
<!--            <url>https://repo.spring.io/release</url>-->
<!--        </pluginRepository>-->
        <pluginRepository>
            <id>graalvm-native-build-tools-snapshots</id>
            <name>GraalVM native-build-tools Snapshots</name>
            <url>https://raw.githubusercontent.com/graalvm/native-build-tools/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <profiles>
        <profile>
            <id>generateMetadata</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.graalvm.buildtools</groupId>
                            <artifactId>native-maven-plugin</artifactId>
                            <extensions>true</extensions>
                            <executions>
                                <execution>
                                    <id>build-native</id>
                                    <goals>
                                        <goal>compile-no-fork</goal>
                                    </goals>
                                    <phase>package</phase>
                                </execution>
                                <execution>
                                    <id>test-native</id>
                                    <goals>
                                        <goal>test</goal>
                                    </goals>
                                    <phase>test</phase>
                                </execution>
                            </executions>
                            <configuration>
                                <agent>
                                    <enabled>true</enabled>
                                    <defaultMode>Conditional</defaultMode>
                                    <modes>
                                        <conditional>
                                            <userCodeFilterPath>${user.dir}/native-image/user-code-filter.json
                                            </userCodeFilterPath>
                                            <extraFilterPath>${user.dir}/native-image/extra-filter.json
                                            </extraFilterPath>
                                            <reflectConfigPath>${user.dir}/native-image/reflect-config.json</reflectConfigPath>
                                            <parallel>true</parallel>
                                        </conditional>
                                    </modes>
                                    <metadataCopy>
                                        <disabledStages>
                                            <stage>main</stage>
                                        </disabledStages>
                                        <merge>false</merge>
                                        <outputDirectory>
                                            ${project.basedir}/src/main/resources/META-INF/native-image/com.binfast.apijson
                                        </outputDirectory>
                                    </metadataCopy>
                                </agent>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>nativeTest</id>
<!--            <properties>-->
<!--                <repackage.classifier>exec</repackage.classifier>-->
<!--                <native-buildtools.version>0.9.13</native-buildtools.version>-->
<!--            </properties>-->
<!--            <dependencies>-->
<!--                <dependency>-->
<!--                    <groupId>org.junit.platform</groupId>-->
<!--                    <artifactId>junit-platform-launcher</artifactId>-->
<!--                    <scope>test</scope>-->
<!--                </dependency>-->
<!--            </dependencies>-->
            <build>
                <plugins>
<!--                    <plugin>-->
<!--                        <groupId>org.graalvm.buildtools</groupId>-->
<!--                        <artifactId>native-maven-plugin</artifactId>-->
<!--                        <version>${native-buildtools.version}</version>-->
<!--                        <extensions>true</extensions>-->
<!--                        <executions>-->
<!--                            <execution>-->
<!--                                <id>test-native</id>-->
<!--                                <phase>test</phase>-->
<!--                                <goals>-->
<!--                                    <goal>test</goal>-->
<!--                                </goals>-->
<!--                            </execution>-->
<!--                            <execution>-->
<!--                                <id>build-native</id>-->
<!--                                <phase>package</phase>-->
<!--                                <goals>-->
<!--                                    <goal>build</goal>-->
<!--                                </goals>-->
<!--                            </execution>-->
<!--                        </executions>-->
<!--                        <configuration>-->
<!--                            &lt;!&ndash;移除对yaml的支持&ndash;&gt;-->
<!--                            <removeYamlSupport>true</removeYamlSupport>-->
<!--                            &lt;!&ndash;移除对jmx的支持&ndash;&gt;-->
<!--                            <removeJmxSupport>true</removeJmxSupport>-->
<!--                            &lt;!&ndash;可执行文件的名字&ndash;&gt;-->
<!--                            <imageName>${project.artifactId}-${project.version}</imageName>-->
<!--                            &lt;!&ndash;<buildArgs>-->
<!--                                -H:+ReportExceptionStackTraces -H:+PrintAnalysisCallTree \-->
<!--                                &#45;&#45;trace-object-instantiation=org.apache.commons.logging.impl.SLF4JLocationAwareLog \-->
<!--                                &#45;&#45;initialize-at-build-time=org.apache.commons.logging.impl.SLF4JLocationAwareLog \-->
<!--                                &#45;&#45;link-at-build-time &#45;&#45;verbose-->
<!--                            </buildArgs>&ndash;&gt;-->
<!--                        </configuration>-->
<!--                    </plugin>-->
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <configuration>
                            <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                            <metadataRepository>
                                <enabled>true</enabled>
                            </metadataRepository>
                            <requiredVersion>22.3</requiredVersion>
                            <extensions>true</extensions>-->
                            <!--移除对yaml的支持-->
                            <removeYamlSupport>true</removeYamlSupport>
                            <!--移除对jmx的支持-->
                            <removeJmxSupport>true</removeJmxSupport>
                            <buildArgs>
                                -H:+AllowVMInspection
                                -H:+ReportUnsupportedElementsAtRuntime
                                --initialize-at-build-time=java.beans.Introspector
                                --verbose
                            </buildArgs>
                        </configuration>
                        <executions>
                            <execution>
                                <id>test-native</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>build-native</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>add-reachability-metadata</id>
                                <goals>
                                    <goal>add-reachability-metadata</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
